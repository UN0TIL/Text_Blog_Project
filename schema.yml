openapi: 3.0.3
info:
  title: Blog API Project
  version: 1.0.0
  description: A sample blog to learn about DRF
paths:
  /api/:
    get:
      operationId: api_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - name: cursor
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostSerializersList'
          description: ''
    post:
      operationId: api_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostSerializers'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
  /api/{id}/:
    get:
      operationId: api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    put:
      operationId: api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostSerializers'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    patch:
      operationId: api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    delete:
      operationId: api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/user/{id}/:
    get:
      operationId: api_user_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: string
          pattern: ^.+$
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostSerializersList'
          description: ''
components:
  schemas:
    PaginatedPostSerializersList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/PostSerializers'
    PatchedPostSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
        title:
          type: string
          maxLength: 250
        body:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
    PostSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: integer
        title:
          type: string
          maxLength: 250
        body:
          type: string
        created:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - author
      - body
      - created
      - id
      - slug
      - title
    StatusEnum:
      enum:
      - DF
      - PB
      type: string
      description: |-
        * `DF` - DRAFT
        * `PB` - PUBLISHED
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
